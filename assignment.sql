CREATE PROCEDURE SP_CUSTOMER_ORDER_SUMMARY
    @COMPANY_NAME VARCHAR(40) = NULL
AS
BEGIN
    SELECT 
        C.COMPANY_NAME AS [CUSTOMER NAME],
        C.CONTACT_NAME AS [CONTACT NAME],
        C.CONTACT_TITLE AS [CONTACT TITLE],
        O.SHIP_NAME AS [SHIP NAME],
        O.SHIP_COUNTRY AS [SHIP COUNTRY],
        SUM(OD.QUANTITY) AS [TOTAL ORDER],
        SUM(OD.QUANTITY * OD.UNIT_PRICE) AS [TOTAL AMOUNT]
    FROM 
        CUSTOMERS C
    INNER JOIN 
        ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
    INNER JOIN 
        ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
    WHERE 
        (@COMPANY_NAME IS NULL OR C.COMPANY_NAME = @COMPANY_NAME)
    GROUP BY 
        C.COMPANY_NAME, C.CONTACT_NAME, C.CONTACT_TITLE, O.SHIP_NAME, O.SHIP_COUNTRY
    ORDER BY 
        C.COMPANY_NAME, O.SHIP_NAME;
END;
GO
CREATE PROCEDURE SP_EMPLOYEE_SALES_BY_TERRITORY
    @TERRITORY_NAME VARCHAR(MAX) = NULL
AS
BEGIN
    SELECT 
        E.COUNTRY AS [COUNTRY],
        R.REGION_DESCRIPTION AS [REGION DESCRIPTION],
        T.TERRITORY_DESCRIPTION AS [TERRITORY DESCRIPTION],
        CONCAT(E.LAST_NAME, ' ', E.FIRST_NAME) AS [EMPLOYEE NAME],
        SUM(OD.QUANTITY * OD.UNIT_PRICE) AS [TOTAL SALES]
    FROM 
        EMPLOYEES E
    INNER JOIN 
        EMPLOYEE_TERRITORIES ET ON E.EMPLOYEE_ID = ET.EMPLOYEE_ID
    INNER JOIN 
        TERRITORIES T ON ET.TERRITORY_ID = T.TERRITORY_ID
    INNER JOIN 
        REGION R ON T.REGION_ID = R.REGION_ID
    INNER JOIN 
        ORDERS O ON E.EMPLOYEE_ID = O.EMPLOYEE_ID
    INNER JOIN 
        ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
    WHERE 
        (@TERRITORY_NAME IS NULL OR T.TERRITORY_DESCRIPTION = @TERRITORY_NAME)
    GROUP BY 
        E.COUNTRY, R.REGION_DESCRIPTION, T.TERRITORY_DESCRIPTION, E.LAST_NAME, E.FIRST_NAME
    ORDER BY 
        T.TERRITORY_DESCRIPTION, R.REGION_DESCRIPTION;
END;
GO
CREATE PROCEDURE SP_EMPLOYEELIST_WITH_ORDERS
    @EMPLOYEE_NAME VARCHAR(MAX) = NULL
AS
BEGIN
    SELECT 
        E.TITLE_OF_COURTESY AS [COURTESY TITLE],
        CONCAT(E.LAST_NAME, ' ', E.FIRST_NAME) AS [EMPLOYEE NAME],
        E.TITLE AS [JOB TITLE],
        CONVERT(VARCHAR, E.HIRE_DATE, 23) AS [HIRE DATE], -- Format as 'yyyy-mm-dd'
        E.ADDRESS AS [EMPLOYEE ADDRESS],
        E.REGION AS [REGION],
        E.POSTAL_CODE AS [POSTAL CODE],
        E.COUNTRY AS [COUNTRY],
        E.HOME_PHONE AS [HOME PHONE]
    FROM 
        EMPLOYEES E
    INNER JOIN 
        ORDERS O ON E.EMPLOYEE_ID = O.EMPLOYEE_ID
    WHERE 
        (@EMPLOYEE_NAME IS NULL OR CONCAT(E.LAST_NAME, ' ', E.FIRST_NAME) = @EMPLOYEE_NAME)
    GROUP BY 
        E.TITLE_OF_COURTESY, E.LAST_NAME, E.FIRST_NAME, E.TITLE, E.HIRE_DATE, E.ADDRESS, E.REGION, E.POSTAL_CODE, E.COUNTRY, E.HOME_PHONE
    ORDER BY 
        [EMPLOYEE NAME] ASC, E.HIRE_DATE DESC;
END;
GO
CREATE PROCEDURE SP_PRODUCTLIST_BY_SUPPLIER
    @SUPPLIER_NAME VARCHAR(150) = NULL
AS
BEGIN
    SELECT 
        S.COMPANY_NAME AS [COMPANY NAME],
        C.CATEGORY_NAME AS [CATEGORY NAME],
        P.PRODUCT_NAME AS [PRODUCT NAME],
        P.QUANTITY_PER_UNIT AS [QUANTITY PER UNIT],
        P.UNIT_PRICE AS [UNIT PRICE],
        P.UNITS_IN_STOCK AS [UNITS IN STOCK],
        P.UNITS_ON_ORDER AS [UNITS ON ORDER],
        P.REORDER_LEVEL AS [REORDER LEVEL]
    FROM 
        PRODUCTS P
    INNER JOIN 
        SUPPLIERS S ON P.SUPPLIER_ID = S.SUPPLIER_ID
    INNER JOIN 
        CATEGORIES C ON P.CATEGORY_ID = C.CATEGORY_ID
    WHERE 
        (@SUPPLIER_NAME IS NULL OR S.COMPANY_NAME = @SUPPLIER_NAME)
    ORDER BY 
        C.CATEGORY_NAME, P.PRODUCT_NAME;
END;
GO