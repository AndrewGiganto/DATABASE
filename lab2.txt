CREATE PROCEDURE SP_CUSTOMER_ORDER_IMPORT
    @CUSTOMER_ID CHAR(40),
    @YEAR_ORDER INT
AS
BEGIN
    -- DELETE EXISTING DATA FOR THE GIVEN CUSTOMER ID AND YEAR
    DELETE FROM CUSTOMER_ORDER_DATA_DUMP
    WHERE CUSTOMER_ID = @CUSTOMER_ID AND YEAR(ORDER_DATE) = @YEAR_ORDER;

    -- INSERT DATA INTO CUSTOMER_ORDER_DATA_DUMP TABLE
    INSERT INTO CUSTOMER_ORDER_DATA_DUMP (
        CUSTOMER_ID, CUSTOMER_NAME, ORDER_DATE, FREIGHT, SHIPPER_COMPANY, 
        SHIP_NAME, SHIP_ADDRESS, SHIP_CITY, SHIP_COUNTRY, TOTAL_AMOUNT, 
        TOTAL_ORDER, DISCOUNT, TOTAL_PAYABLE_AMOUNT, CREATED_DATE
    )
    SELECT 
        C.CUSTOMER_ID AS CUSTOMER_ID,
        C.COMPANY_NAME AS CUSTOMER_NAME,
        O.ORDER_DATE AS ORDER_DATE,
        SUM(O.FREIGHT) AS FREIGHT,
        S.COMPANY_NAME AS SHIPPER_COMPANY,
        O.SHIP_NAME AS SHIP_NAME,
        O.SHIP_ADDRESS AS SHIP_ADDRESS,
        O.SHIP_CITY AS SHIP_CITY,
        O.SHIP_COUNTRY AS SHIP_COUNTRY,
        SUM(OD.UNIT_PRICE * OD.QUANTITY) AS TOTAL_AMOUNT,
        SUM(OD.QUANTITY) AS TOTAL_ORDER,
        SUM(OD.DISCOUNT) AS DISCOUNT,
        SUM(OD.UNIT_PRICE * OD.QUANTITY + O.FREIGHT) AS TOTAL_PAYABLE_AMOUNT,
        GETDATE() AS CREATED_DATE
    FROM 
        ORDERS O
    INNER JOIN 
        CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
    INNER JOIN 
        SHIPPERS S ON O.SHIP_VIA = S.SHIPPER_ID
    INNER JOIN 
        ORDER_DETAILS OD ON O.ORDER_ID = OD.ORDER_ID
    WHERE 
        C.CUSTOMER_ID = @CUSTOMER_ID AND YEAR(O.ORDER_DATE) = @YEAR_ORDER
    GROUP BY 
        C.CUSTOMER_ID, C.COMPANY_NAME, O.ORDER_DATE, S.COMPANY_NAME, 
        O.SHIP_NAME, O.SHIP_ADDRESS, O.SHIP_CITY, O.SHIP_COUNTRY;
END;
GO
CREATE PROCEDURE SP_TOP_SUPPLIERS
    @END_DATE DATETIME,
    @ISRETURNED INT OUTPUT
AS
BEGIN
    -- DECLARE START DATE AS THE FIRST DAY OF THE YEAR OF THE END DATE
    DECLARE @START_DATE DATETIME;
    SET @START_DATE = DATEFROMPARTS(YEAR(@END_DATE), 1, 1);

    -- GET TOP 25 SUPPLIERS BASED ON TOTAL SALES YEAR-TO-DATE
    SELECT TOP 25
        S.COMPANY_NAME AS SUPPLIER_NAME,
        SUM(OD.UNIT_PRICE * OD.QUANTITY) AS TOTAL_SALES
    FROM 
        SUPPLIERS S
    INNER JOIN 
        PRODUCTS P ON S.SUPPLIER_ID = P.SUPPLIER_ID
    INNER JOIN 
        ORDER_DETAILS OD ON P.PRODUCT_ID = OD.PRODUCT_ID
    INNER JOIN 
        ORDERS O ON OD.ORDER_ID = O.ORDER_ID
    WHERE 
        O.ORDER_DATE BETWEEN @START_DATE AND @END_DATE
    GROUP BY 
        S.COMPANY_NAME
    ORDER BY 
        TOTAL_SALES DESC;

    -- SET OUTPUT PARAMETER TO THE NUMBER OF ROWS RETURNED
    SET @ISRETURNED = @@ROWCOUNT;
END;
GO
CREATE PROCEDURE SP_EMPLOYEE_MANAGER_TRACKING
    @YEAR_HIRE INT = NULL
AS
BEGIN
    SELECT 
        CONCAT(E.LAST_NAME, ' ', E.FIRST_NAME) AS EMP_NAME,
        E.TITLE AS EMP_JOB_TITLE,
        CONCAT(M.LAST_NAME, ' ', M.FIRST_NAME) AS MANAGER_NAME,
        M.TITLE AS MANAGER_JOB_TITLE
    FROM 
        EMPLOYEES E
    LEFT JOIN 
        EMPLOYEES M ON E.REPORTS_TO = M.EMPLOYEE_ID
    WHERE 
        (@YEAR_HIRE IS NULL OR YEAR(E.HIRE_DATE) = @YEAR_HIRE)
    ORDER BY 
        EMP_NAME;
END;
GO